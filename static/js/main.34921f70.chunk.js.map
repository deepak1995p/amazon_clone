{"version":3,"sources":["try_amazon_prime.jpg","Header.js","Product.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","src","alt","type","Product","id","title","image","price","rating","Array","fill","map","Home","HomeImage","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,8C,gSCuD5BC,MAjDf,WACI,OACI,yBAAKC,UAAU,UACX,kBAAC,IAAD,CAAMC,GAAG,KAEL,yBACID,UAAU,cACVE,IAAI,oDACJC,IAAI,iBAMZ,yBAAKH,UAAU,iBACX,2BAAOI,KAAK,OAAOJ,UAAU,uBAC7B,kBAAC,IAAD,CAAYA,UAAU,uBAE1B,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,eACxB,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,wBAAhB,gBACA,0BAAMA,UAAU,wBAAhB,UAGR,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eACnB,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,wBAAhB,WACA,0BAAMA,UAAU,wBAAhB,cAGR,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eACnB,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,wBAAhB,QACA,0BAAMA,UAAU,wBAAhB,WAGR,kBAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,eAC3B,yBAAKA,UAAU,uBACX,kBAAC,IAAD,MACA,0BAAMA,UAAU,2CAAhB,U,+BCtBTK,MArBf,YAAsD,EAAnCC,GAAoC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACxC,OACI,yBAAKV,UAAU,WACX,2BAAIO,GACJ,uBAAGP,UAAU,iBACT,yCACA,gCAASS,IAEb,yBAAKT,UAAU,kBACVW,MAAMD,GACFE,OACAC,KAAI,kBACF,+CAGX,yBAAKX,IAAKM,EAAOL,IAAI,KACrB,mDCOGW,MArBf,WACI,OACI,yBAAKd,UAAU,QACX,yBACAA,UAAU,aACVE,IAAOa,IACPZ,IAAI,gBAIJ,kBAAC,EAAD,CACIG,GAAG,SACHC,MAAM,oDACNE,MAAO,IACPC,OAAQ,EACRF,MAAO,OCORQ,MArBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKhB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiB,KAAK,aACV,yCAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,2CAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,MACA,kBAAC,EAAD,WCPQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.34921f70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/try_amazon_prime.8662a4a1.jpg\";","import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket'\r\n\r\nfunction Header() {\r\n    return (\r\n        <nav className=\"header\">\r\n            <Link to=\"/\">\r\n                {/* logo on left*/}\r\n                <img\r\n                    className=\"header_logo\"\r\n                    src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"\r\n                    alt=\"amazon-logo\"\r\n                />\r\n            </Link>\r\n\r\n\r\n            {/* searchBox */}\r\n            <div className=\"header_search\">\r\n                <input type=\"text\" className=\"header_searchInput\" />\r\n                <SearchIcon className=\"header_searchIcon\" />\r\n            </div>\r\n            <div className=\"header_nav\">\r\n                <Link to=\"/login\" className=\"header_link\">\r\n                    <div className=\"header_option\">\r\n                        <span className=\"header_optionLineOne\">Hello Deepak</span>\r\n                        <span className=\"header_optionLineTwo\">Sign</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/\" className=\"header_link\">\r\n                    <div className=\"header_option\">\r\n                        <span className=\"header_optionLineOne\">Returns</span>\r\n                        <span className=\"header_optionLineTwo\">& Orders</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/\" className=\"header_link\">\r\n                    <div className=\"header_option\">\r\n                        <span className=\"header_optionLineOne\">Your</span>\r\n                        <span className=\"header_optionLineTwo\">Prime</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/checkout\" className=\"header_link\">\r\n                    <div className=\"header_optionBasket\">\r\n                        <ShoppingBasketIcon />\r\n                        <span className=\"header_optionLineTwo header_BasketCount\">0</span>\r\n                    </div>\r\n                </Link>\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './Product.css'\r\n\r\nfunction Product({ id, title, image, price, rating }) {\r\n    return (\r\n        <div className=\"product\">\r\n            <p>{title}</p>\r\n            <p className=\"product_price\">\r\n                <small>₹</small>\r\n                <strong>{price}</strong>\r\n            </p>\r\n            <div className=\"product_rating\">\r\n                {Array(rating)\r\n                    .fill()\r\n                    .map(() => (\r\n                       <p>⭐️</p>\r\n                    ))}\r\n            </div>\r\n            <img src={image} alt=\"\" />\r\n            <button>Add to Basket</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport './Home.css'\r\nimport HomeImage from './try_amazon_prime.jpg'\r\nimport Product from './Product'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <img \r\n            className=\"home_image\"\r\n            src=  {HomeImage}\r\n            alt=\"prime_image\"\r\n            />\r\n            \r\n            {/* Product id, title,price,rating,image */}\r\n            <Product\r\n                id=\"123456\"\r\n                title=\"The Lean Startup: How constant Innovation Creates\"\r\n                price={100}\r\n                rating={5}\r\n                image= \"\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/checkout\">\n            <h1>Checkout</h1>\n          </Route>\n          <Route path=\"/login\">\n            <h1>Login Page</h1>\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}